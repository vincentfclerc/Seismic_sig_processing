# -*- coding: utf-8 -*-
"""Functionnal_model_Conv_NN_running_on_GPU_short_windows.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nWZ52UgocjlgdD8Yit3vMHxGiKTBz5SZ
"""

# This Python 3 environment comes with many helpful analytics libraries installed
# It is #!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
AutoPickP

Created on Tue Jun 18 16:27:39 2019

@author: Vincent4TOMOSs
"""
from __future__ import absolute_import, division, print_function


import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
import tensorflow
import random
from scipy.signal import hilbert
from sklearn.metrics import classification_report
from sklearn.metrics import confusion_matrix
from sklearn import ensemble
from sklearn import linear_model
from sklearn.pipeline import Pipeline
from sklearn.preprocessing import StandardScaler
from sklearn.preprocessing import Normalizer
from sklearn.decomposition import PCA
from scipy.signal import hilbert
from datetime import datetime as dt

 
import scipy.fftpack
from google.colab import drive
drive.mount('/content/drive')

random.seed( 30 )

raw_dataset = pd.read_csv('/content/drive/My Drive/Manips_Tomos/Data/Signal_windows_400_randomized_picks.txt', sep=" ", header=None)

raw_dataset=raw_dataset.dropna(axis=1, how='any', thresh=None, subset=None, inplace=False)
X_test = raw_dataset.copy()
lag= X_test.pop(0)



def preTransform(Data):
  max0=np.abs(Data).max(axis=1)
  dataset_norm = Data / max0[:,None]

  #enveloppe
  dataset_fourier_abs=np.abs(hilbert(Data)) #juste pour un test
  max1=np.abs(dataset_fourier_abs).max(axis=1)
  dataset_fourier_abs_norm = dataset_fourier_abs[...,200:400] / max1[:,None]

#imag fft
  dataset_fourier_imag=np.imag(scipy.fftpack.fft(Data))
  max2=np.abs(dataset_fourier_imag).max(axis=1)
  dataset_fourier_imag_norm = dataset_fourier_imag[...,200:400] / max2[:,None]
#real fft
  dataset_fourier_real=np.real(scipy.fftpack.fft(Data))
  max3=np.abs(dataset_fourier_real).max(axis=1)
  dataset_fourier_real_norm = dataset_fourier_real[...,200:400] / max3[:,None]
  return dataset_norm,dataset_fourier_abs_norm,dataset_fourier_imag_norm,dataset_fourier_real_norm

X_test_norm,X_test_fourier_abs_norm,X_test_fourier_imag_norm,X_test_fourier_real_norm=preTransform(X_test)

"""### Ici je suis censé décrire le fonctionnement du code
on fera ça plus tard
"""

# load json and create model
json_file = open("/content/drive/My Drive/Manips_Tomos/NNModels/model_05-12-2019-13-31.json", 'r')
loaded_model_json = json_file.read()
json_file.close()
loaded_model = tensorflow.keras.models.model_from_json(loaded_model_json)
# load weights into new model
loaded_model.load_weights("/content/drive/My Drive/Manips_Tomos/NNModels/model_05-12-2019-13-31.h5")
print("Loaded model from disk")


test_predictions = loaded_model.predict([np.expand_dims(X_test_norm, axis=2), np.expand_dims(X_test_fourier_abs_norm, axis=2),
                                  np.expand_dims(X_test_fourier_real_norm, axis=2), np.expand_dims(X_test_fourier_imag_norm, axis=2)])



#%%

errors=lag-test_predictions[...,0]
plt.figure(1)
plt.hist(errors,1000,range=(-100,100))
plt.xlabel('prediction  error in samples  ')
plt.ylabel('bins  ')
plt.title(f'' )

picks_true = pd.read_csv('/content/drive/My Drive/Manips_Tomos/AutoPicks_NN/Signal_windows_400_randomized_picks_picks2predict.txt', sep=" ", header=None)
picks_true_values=picks_true.values
picks_predits=picks_true_values[...,0]-errors
np.savetxt(f'/content/drive/My Drive/Manips_Tomos/AutoPicks_NN/predictions_l2_3.txt', picks_predits, fmt='%1.3e')

type(picks_true)

print(picks_predits)

